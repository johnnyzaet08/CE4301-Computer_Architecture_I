--- sim_outorder1.txt	2023-10-04 04:39:28.836008393 +0000
+++ sim_outorder2.txt	2023-10-04 04:39:33.940079279 +0000
@@ -5,9 +5,9 @@
 entity, or for any commercial purpose, without the prior written permission
 of SimpleScalar, LLC (info@simplescalar.com).
 
-sim: command line: /root/build/simplesim-3.0/sim-outorder -res:fpalu 1 -res:imult 1 -res:ialu 1 -res:fpmult 1 -res:memport 2 test 
+sim: command line: /root/build/simplesim-3.0/sim-outorder -res:fpalu 4 -res:imult 1 -res:ialu 4 -res:fpmult 1 -res:memport 2 test 
 
-sim: simulation started @ Wed Oct  4 04:39:28 2023, options follow:
+sim: simulation started @ Wed Oct  4 04:39:33 2023, options follow:
 
 sim-outorder: This simulator implements a very detailed out-of-order issue
 superscalar processor with a two-level memory system and speculative
@@ -61,10 +61,10 @@
 -tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
 -tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
 -tlb:lat                   30 # inst/data TLB miss latency (in cycles)
--res:ialu                   1 # total number of integer ALU's available
+-res:ialu                   4 # total number of integer ALU's available
 -res:imult                  1 # total number of integer multiplier/dividers available
 -res:memport                2 # total number of memory system ports available (to CPU)
--res:fpalu                  1 # total number of floating point ALU's available
+-res:fpalu                  4 # total number of floating point ALU's available
 -res:fpmult                 1 # total number of floating point multiplier/dividers available
 # -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
 -bugcompat              false # operate in backward-compatible bugs mode (for testing only)
@@ -143,71 +143,71 @@
 sim_num_branches               3196 # total number of branches committed
 sim_elapsed_time                  1 # total simulation time in seconds
 sim_inst_rate            18638.0000 # simulation speed (in insts/sec)
-sim_total_insn                20517 # total number of instructions executed
-sim_total_refs                 6129 # total number of loads and stores executed
-sim_total_loads                1941 # total number of loads executed
-sim_total_stores          4188.0000 # total number of stores executed
-sim_total_branches             3570 # total number of branches executed
-sim_cycle                     33339 # total simulation time in cycles
-sim_IPC                      0.5590 # instructions per cycle
-sim_CPI                      1.7888 # cycles per instruction
-sim_exec_BW                  0.6154 # total instructions (mis-spec + committed) per cycle
+sim_total_insn                20059 # total number of instructions executed
+sim_total_refs                 6030 # total number of loads and stores executed
+sim_total_loads                1875 # total number of loads executed
+sim_total_stores          4155.0000 # total number of stores executed
+sim_total_branches             3461 # total number of branches executed
+sim_cycle                     25256 # total simulation time in cycles
+sim_IPC                      0.7380 # instructions per cycle
+sim_CPI                      1.3551 # cycles per instruction
+sim_exec_BW                  0.7942 # total instructions (mis-spec + committed) per cycle
 sim_IPB                      5.8317 # instruction per branch
-IFQ_count                     78095 # cumulative IFQ occupancy
-IFQ_fcount                    18812 # cumulative IFQ full count
-ifq_occupancy                2.3425 # avg IFQ occupancy (insn's)
-ifq_rate                     0.6154 # avg IFQ dispatch rate (insn/cycle)
-ifq_latency                  3.8064 # avg IFQ occupant latency (cycle's)
-ifq_full                     0.5643 # fraction of time (cycle's) IFQ was full
-RUU_count                    293462 # cumulative RUU occupancy
-RUU_fcount                    13504 # cumulative RUU full count
-ruu_occupancy                8.8024 # avg RUU occupancy (insn's)
-ruu_rate                     0.6154 # avg RUU dispatch rate (insn/cycle)
-ruu_latency                 14.3034 # avg RUU occupant latency (cycle's)
-ruu_full                     0.4051 # fraction of time (cycle's) RUU was full
-LSQ_count                     68241 # cumulative LSQ occupancy
-LSQ_fcount                     4511 # cumulative LSQ full count
-lsq_occupancy                2.0469 # avg LSQ occupancy (insn's)
-lsq_rate                     0.6154 # avg LSQ dispatch rate (insn/cycle)
-lsq_latency                  3.3261 # avg LSQ occupant latency (cycle's)
-lsq_full                     0.1353 # fraction of time (cycle's) LSQ was full
-sim_slip                     373839 # total number of slip cycles
-avg_sim_slip                20.0579 # the average slip between issue and retirement
-bpred_bimod.lookups            3704 # total number of bpred lookups
+IFQ_count                     44756 # cumulative IFQ occupancy
+IFQ_fcount                    10219 # cumulative IFQ full count
+ifq_occupancy                1.7721 # avg IFQ occupancy (insn's)
+ifq_rate                     0.7942 # avg IFQ dispatch rate (insn/cycle)
+ifq_latency                  2.2312 # avg IFQ occupant latency (cycle's)
+ifq_full                     0.4046 # fraction of time (cycle's) IFQ was full
+RUU_count                    172218 # cumulative RUU occupancy
+RUU_fcount                     7322 # cumulative RUU full count
+ruu_occupancy                6.8189 # avg RUU occupancy (insn's)
+ruu_rate                     0.7942 # avg RUU dispatch rate (insn/cycle)
+ruu_latency                  8.5856 # avg RUU occupant latency (cycle's)
+ruu_full                     0.2899 # fraction of time (cycle's) RUU was full
+LSQ_count                     29363 # cumulative LSQ occupancy
+LSQ_fcount                     1639 # cumulative LSQ full count
+lsq_occupancy                1.1626 # avg LSQ occupancy (insn's)
+lsq_rate                     0.7942 # avg LSQ dispatch rate (insn/cycle)
+lsq_latency                  1.4638 # avg LSQ occupant latency (cycle's)
+lsq_full                     0.0649 # fraction of time (cycle's) LSQ was full
+sim_slip                     221608 # total number of slip cycles
+avg_sim_slip                11.8901 # the average slip between issue and retirement
+bpred_bimod.lookups            3562 # total number of bpred lookups
 bpred_bimod.updates            3196 # total number of updates
-bpred_bimod.addr_hits          2784 # total number of address-predicted hits
+bpred_bimod.addr_hits          2785 # total number of address-predicted hits
 bpred_bimod.dir_hits           2945 # total number of direction-predicted hits (includes addr-hits)
 bpred_bimod.misses              251 # total number of misses
 bpred_bimod.jr_hits             184 # total number of address-predicted hits for JR's
 bpred_bimod.jr_seen             198 # total number of JR's seen
 bpred_bimod.jr_non_ras_hits.PP           12 # total number of address-predicted hits for non-RAS JR's
 bpred_bimod.jr_non_ras_seen.PP           15 # total number of non-RAS JR's seen
-bpred_bimod.bpred_addr_rate    0.8711 # branch address-prediction rate (i.e., addr-hits/updates)
+bpred_bimod.bpred_addr_rate    0.8714 # branch address-prediction rate (i.e., addr-hits/updates)
 bpred_bimod.bpred_dir_rate    0.9215 # branch direction-prediction rate (i.e., all-hits/updates)
 bpred_bimod.bpred_jr_rate    0.9293 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
 bpred_bimod.bpred_jr_non_ras_rate.PP    0.8000 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
-bpred_bimod.retstack_pushes          228 # total number of address pushed onto ret-addr stack
-bpred_bimod.retstack_pops          187 # total number of address popped off of ret-addr stack
+bpred_bimod.retstack_pushes          217 # total number of address pushed onto ret-addr stack
+bpred_bimod.retstack_pops          185 # total number of address popped off of ret-addr stack
 bpred_bimod.used_ras.PP          183 # total number of RAS predictions used
 bpred_bimod.ras_hits.PP          172 # total number of RAS hits
 bpred_bimod.ras_rate.PP    0.9399 # RAS prediction rate (i.e., RAS hits/used RAS)
-il1.accesses                  21506 # total number of accesses
-il1.hits                      20728 # total number of hits
-il1.misses                      778 # total number of misses
-il1.replacements                421 # total number of replacements
+il1.accesses                  21027 # total number of accesses
+il1.hits                      20250 # total number of hits
+il1.misses                      777 # total number of misses
+il1.replacements                420 # total number of replacements
 il1.writebacks                    0 # total number of writebacks
 il1.invalidations                 0 # total number of invalidations
-il1.miss_rate                0.0362 # miss rate (i.e., misses/ref)
-il1.repl_rate                0.0196 # replacement rate (i.e., repls/ref)
+il1.miss_rate                0.0370 # miss rate (i.e., misses/ref)
+il1.repl_rate                0.0200 # replacement rate (i.e., repls/ref)
 il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
 il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
-dl1.accesses                   5715 # total number of accesses
+dl1.accesses                   5716 # total number of accesses
 dl1.hits                       5275 # total number of hits
-dl1.misses                      440 # total number of misses
+dl1.misses                      441 # total number of misses
 dl1.replacements                  7 # total number of replacements
 dl1.writebacks                    4 # total number of writebacks
 dl1.invalidations                 0 # total number of invalidations
-dl1.miss_rate                0.0770 # miss rate (i.e., misses/ref)
+dl1.miss_rate                0.0772 # miss rate (i.e., misses/ref)
 dl1.repl_rate                0.0012 # replacement rate (i.e., repls/ref)
 dl1.wb_rate                  0.0007 # writeback rate (i.e., wrbks/ref)
 dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
@@ -221,8 +221,8 @@
 ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
 ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
 ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
-itlb.accesses                 21506 # total number of accesses
-itlb.hits                     21494 # total number of hits
+itlb.accesses                 21027 # total number of accesses
+itlb.hits                     21015 # total number of hits
 itlb.misses                      12 # total number of misses
 itlb.replacements                 0 # total number of replacements
 itlb.writebacks                   0 # total number of writebacks
@@ -231,8 +231,8 @@
 itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
 itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
 itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
-dtlb.accesses                  5715 # total number of accesses
-dtlb.hits                      5707 # total number of hits
+dtlb.accesses                  5769 # total number of accesses
+dtlb.hits                      5761 # total number of hits
 dtlb.misses                       8 # total number of misses
 dtlb.replacements                 0 # total number of replacements
 dtlb.writebacks                   0 # total number of writebacks
@@ -254,6 +254,6 @@
 mem.page_count                   26 # total number of pages allocated
 mem.page_mem                   104k # total size of memory pages allocated
 mem.ptab_misses                  26 # total first level page table misses
-mem.ptab_accesses            575864 # total page table accesses
+mem.ptab_accesses            573826 # total page table accesses
 mem.ptab_miss_rate           0.0000 # first level page table miss rate
 
