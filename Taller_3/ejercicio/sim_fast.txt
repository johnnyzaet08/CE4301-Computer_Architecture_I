sim-fast: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).

sim: command line: /root/build/simplesim-3.0/sim-fast test 

sim: simulation started @ Wed Oct  4 04:28:12 2023, options follow:

sim-fast: This simulator implements a very fast functional simulator.  This
functional simulator implementation is much more difficult to digest than
the simpler, cleaner sim-safe functional simulator.  By default, this
simulator performs no instruction error checking, as a result, any
instruction errors will manifest as simulator execution errors, possibly
causing sim-fast to execute incorrectly or dump core.  Such is the
price we pay for speed!!!!

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority

sim: ** starting *fast* functional simulation **
x+1 = 0x0000000100000001
x-1 = 0x00000000ffffffff
y+1 = 0x0000000200000000
x+y = 0x00000002ffffffff
z*w = 0x01fffffff0000000

sim: ** simulation statistics **
sim_num_insn                  18638 # total number of instructions executed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate            18638.0000 # simulation speed (in insts/sec)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  72432 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   8400 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   26 # total number of pages allocated
mem.page_mem                   104k # total size of memory pages allocated
mem.ptab_misses                  26 # total first level page table misses
mem.ptab_accesses            533202 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

