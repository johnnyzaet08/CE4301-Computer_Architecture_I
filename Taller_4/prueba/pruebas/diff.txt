--- wattch-1.txt	2023-10-15 20:13:51.715877564 +0000
+++ wattch-8.txt	2023-10-15 20:13:58.047971605 +0000
@@ -12,63 +12,63 @@
 Number of Virtual Registers: 32
 Number of Physical Registers: 16
 Datapath Width: 64
-Total Power Consumption: 57.7939
-Branch Predictor Power Consumption: 4.52313  (8.11%)
+Total Power Consumption: 113.283
+Branch Predictor Power Consumption: 4.52313  (4.06%)
  branch target buffer power (W): 4.16837
  local predict power (W): 0.0879711
  global predict power (W): 0.0996078
  chooser power (W): 0.0702439
  RAS power (W): 0.0969383
-Rename Logic Power Consumption: 0.417965  (0.749%)
+Rename Logic Power Consumption: 0.417965  (0.376%)
  Instruction Decode Power (W): 0.0159915
  RAT decode_power (W): 0.113514
  RAT wordline_power (W): 0.0307815
  RAT bitline_power (W): 0.246771
  DCL Comparators (W): 0.0109075
-Instruction Window Power Consumption: 2.20432  (3.95%)
+Instruction Window Power Consumption: 2.20432  (1.98%)
  tagdrive (W): 0.0943488
  tagmatch (W): 0.033695
  Selection Logic (W): 0.0134217
  decode_power (W): 0.0532503
  wordline_power (W): 0.0844643
  bitline_power (W): 1.92514
-Load/Store Queue Power Consumption: 2.35268  (4.22%)
+Load/Store Queue Power Consumption: 2.35268  (2.11%)
  tagdrive (W): 0.980932
  tagmatch (W): 0.214841
  decode_power (W): 0.0159915
  wordline_power (W): 0.0433172
  bitline_power (W): 1.0976
-Arch. Register File Power Consumption: 3.57247  (6.4%)
+Arch. Register File Power Consumption: 3.57247  (3.21%)
  decode_power (W): 0.113514
  wordline_power (W): 0.0844643
  bitline_power (W): 3.37449
-Result Bus Power Consumption: 0.885119  (1.59%)
-Total Clock Power: 18.2471  (32.7%)
-Int ALU Power: 1.16503  (2.09%)
-FP ALU Power: 3.57026  (6.4%)
-Instruction Cache Power Consumption: 2.21363  (3.97%)
+Result Bus Power Consumption: 4.18077  (3.76%)
+Total Clock Power: 37.2935  (33.5%)
+Int ALU Power: 9.32026  (8.38%)
+FP ALU Power: 28.5621  (25.7%)
+Instruction Cache Power Consumption: 2.21363  (1.99%)
  decode_power (W): 0.779481
  wordline_power (W): 0.028656
  bitline_power (W): 0.886372
  senseamp_power (W): 0.096
  tagarray_power (W): 0.423116
-Itlb_power (W): 0.263317 (0.472%)
-Data Cache Power Consumption: 10.3661  (18.6%)
+Itlb_power (W): 0.263317 (0.237%)
+Data Cache Power Consumption: 10.3661  (9.32%)
  decode_power (W): 1.30211
  wordline_power (W): 0.393471
  bitline_power (W): 5.42471
  senseamp_power (W): 1.536
  tagarray_power (W): 1.70977
-Dtlb_power (W): 1.80375 (3.23%)
-Level 2 Cache Power Consumption: 4.2091 (7.54%)
+Dtlb_power (W): 1.80375 (1.62%)
+Level 2 Cache Power Consumption: 4.2091 (3.78%)
  decode_power (W): 0.41817
  wordline_power (W): 0.0430878
  bitline_power (W): 3.0244
  senseamp_power (W): 0.192
  tagarray_power (W): 0.531433
-sim: command line: ../sim-outorder -res:fpalu 1 -res:fpmult 1 -res:imult 1 -res:ialu 1 test 
+sim: command line: ../sim-outorder -res:fpalu 8 -res:fpmult 8 -res:imult 8 -res:ialu 8 test 
 
-sim: simulation started @ Sun Oct 15 20:13:51 2023, options follow:
+sim: simulation started @ Sun Oct 15 20:13:57 2023, options follow:
 
 sim-outorder: This simulator implements a very detailed out-of-order issue
 superscalar processor with a two-level memory system and speculative
@@ -122,11 +122,11 @@
 -tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
 -tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
 -tlb:lat                   30 # inst/data TLB miss latency (in cycles)
--res:ialu                   1 # total number of integer ALU's available
--res:imult                  1 # total number of integer multiplier/dividers available
+-res:ialu                   8 # total number of integer ALU's available
+-res:imult                  8 # total number of integer multiplier/dividers available
 -res:memport                4 # total number of memory system ports available (to CPU)
--res:fpalu                  1 # total number of floating point ALU's available
--res:fpmult                 1 # total number of floating point multiplier/dividers available
+-res:fpalu                  8 # total number of floating point ALU's available
+-res:fpmult                 8 # total number of floating point multiplier/dividers available
 # -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
 -bugcompat              false # operate in backward-compatible bugs mode (for testing only)
 
@@ -2887,12 +2887,6 @@
 config 0 is 1 config 1 is 1
 curr_config_rom_index is 3
 config 0 is 1 config 1 is 1
-curr_config_rom_index is 3
-config 0 is 1 config 1 is 1
-curr_config_rom_index is 3
-config 0 is 1 config 1 is 1
-curr_config_rom_index is 3
-config 0 is 1 config 1 is 1
 q=4 (int)x=12 (int)y=29
 z=144
 z=841
@@ -2913,90 +2907,90 @@
 sim_num_branches               7588 # total number of branches committed
 sim_elapsed_time                  1 # total simulation time in seconds
 sim_inst_rate            42354.0000 # simulation speed (in insts/sec)
-sim_total_insn                48777 # total number of instructions executed
-sim_total_refs                13343 # total number of loads and stores executed
-sim_total_loads                6374 # total number of loads executed
-sim_total_stores          6969.0000 # total number of stores executed
-sim_total_branches             8886 # total number of branches executed
+sim_total_insn                47041 # total number of instructions executed
+sim_total_refs                12999 # total number of loads and stores executed
+sim_total_loads                6211 # total number of loads executed
+sim_total_stores          6788.0000 # total number of stores executed
+sim_total_branches             8599 # total number of branches executed
 config_rom_falu_access           63 # total number of branches executed
-config_rom_ialu_access        41350 # total number of branches executed
-config_rom_falu_miss              2 # total number of branches executed
-config_rom_ialu_miss         146413 # total number of branches executed
-sim_cycle                     71270 # total simulation time in cycles
-sim_IPC                      0.5943 # instructions per cycle
-sim_CPI                      1.6827 # cycles per instruction
-sim_exec_BW                  0.6844 # total instructions (mis-spec + committed) per cycle
+config_rom_ialu_access        42735 # total number of branches executed
+config_rom_falu_miss              0 # total number of branches executed
+config_rom_ialu_miss              1 # total number of branches executed
+sim_cycle                     56208 # total simulation time in cycles
+sim_IPC                      0.7535 # instructions per cycle
+sim_CPI                      1.3271 # cycles per instruction
+sim_exec_BW                  0.8369 # total instructions (mis-spec + committed) per cycle
 sim_IPB                      5.5817 # instruction per branch
-IFQ_count                    140835 # cumulative IFQ occupancy
-IFQ_fcount                    33087 # cumulative IFQ full count
-ifq_occupancy                1.9761 # avg IFQ occupancy (insn's)
-ifq_rate                     0.6844 # avg IFQ dispatch rate (insn/cycle)
-ifq_latency                  2.8873 # avg IFQ occupant latency (cycle's)
-ifq_full                     0.4642 # fraction of time (cycle's) IFQ was full
-RUU_count                    567022 # cumulative RUU occupancy
-RUU_fcount                    24982 # cumulative RUU full count
-ruu_occupancy                7.9560 # avg RUU occupancy (insn's)
-ruu_rate                     0.6844 # avg RUU dispatch rate (insn/cycle)
-ruu_latency                 11.6248 # avg RUU occupant latency (cycle's)
-ruu_full                     0.3505 # fraction of time (cycle's) RUU was full
-LSQ_count                    137880 # cumulative LSQ occupancy
-LSQ_fcount                     5285 # cumulative LSQ full count
-lsq_occupancy                1.9346 # avg LSQ occupancy (insn's)
-lsq_rate                     0.6844 # avg LSQ dispatch rate (insn/cycle)
-lsq_latency                  2.8267 # avg LSQ occupant latency (cycle's)
-lsq_full                     0.0742 # fraction of time (cycle's) LSQ was full
-sim_slip                     717926 # total number of slip cycles
-avg_sim_slip                16.9506 # the average slip between issue and retirement
-bpred_bimod.lookups            9291 # total number of bpred lookups
+IFQ_count                     77626 # cumulative IFQ occupancy
+IFQ_fcount                    16888 # cumulative IFQ full count
+ifq_occupancy                1.3810 # avg IFQ occupancy (insn's)
+ifq_rate                     0.8369 # avg IFQ dispatch rate (insn/cycle)
+ifq_latency                  1.6502 # avg IFQ occupant latency (cycle's)
+ifq_full                     0.3005 # fraction of time (cycle's) IFQ was full
+RUU_count                    302655 # cumulative RUU occupancy
+RUU_fcount                    10084 # cumulative RUU full count
+ruu_occupancy                5.3846 # avg RUU occupancy (insn's)
+ruu_rate                     0.8369 # avg RUU dispatch rate (insn/cycle)
+ruu_latency                  6.4339 # avg RUU occupant latency (cycle's)
+ruu_full                     0.1794 # fraction of time (cycle's) RUU was full
+LSQ_count                     61618 # cumulative LSQ occupancy
+LSQ_fcount                     1907 # cumulative LSQ full count
+lsq_occupancy                1.0962 # avg LSQ occupancy (insn's)
+lsq_rate                     0.8369 # avg LSQ dispatch rate (insn/cycle)
+lsq_latency                  1.3099 # avg LSQ occupant latency (cycle's)
+lsq_full                     0.0339 # fraction of time (cycle's) LSQ was full
+sim_slip                     404525 # total number of slip cycles
+avg_sim_slip                 9.5510 # the average slip between issue and retirement
+bpred_bimod.lookups            8879 # total number of bpred lookups
 bpred_bimod.updates            7588 # total number of updates
-bpred_bimod.addr_hits          6487 # total number of address-predicted hits
-bpred_bimod.dir_hits           6790 # total number of direction-predicted hits (includes addr-hits)
-bpred_bimod.misses              798 # total number of misses
-bpred_bimod.jr_hits             561 # total number of address-predicted hits for JR's
+bpred_bimod.addr_hits          6492 # total number of address-predicted hits
+bpred_bimod.dir_hits           6791 # total number of direction-predicted hits (includes addr-hits)
+bpred_bimod.misses              797 # total number of misses
+bpred_bimod.jr_hits             564 # total number of address-predicted hits for JR's
 bpred_bimod.jr_seen             605 # total number of JR's seen
 bpred_bimod.jr_non_ras_hits.PP            4 # total number of address-predicted hits for non-RAS JR's
 bpred_bimod.jr_non_ras_seen.PP           19 # total number of non-RAS JR's seen
-bpred_bimod.bpred_addr_rate    0.8549 # branch address-prediction rate (i.e., addr-hits/updates)
-bpred_bimod.bpred_dir_rate    0.8948 # branch direction-prediction rate (i.e., all-hits/updates)
-bpred_bimod.bpred_jr_rate    0.9273 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
+bpred_bimod.bpred_addr_rate    0.8556 # branch address-prediction rate (i.e., addr-hits/updates)
+bpred_bimod.bpred_dir_rate    0.8950 # branch direction-prediction rate (i.e., all-hits/updates)
+bpred_bimod.bpred_jr_rate    0.9322 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
 bpred_bimod.bpred_jr_non_ras_rate.PP    0.2105 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
-bpred_bimod.retstack_pushes          720 # total number of address pushed onto ret-addr stack
-bpred_bimod.retstack_pops          709 # total number of address popped off of ret-addr stack
+bpred_bimod.retstack_pushes          681 # total number of address pushed onto ret-addr stack
+bpred_bimod.retstack_pops          704 # total number of address popped off of ret-addr stack
 bpred_bimod.used_ras.PP          586 # total number of RAS predictions used
-bpred_bimod.ras_hits.PP          557 # total number of RAS hits
-bpred_bimod.ras_rate.PP    0.9505 # RAS prediction rate (i.e., RAS hits/used RAS)
-il1.accesses                  52685 # total number of accesses
-il1.hits                      49713 # total number of hits
-il1.misses                     2972 # total number of misses
-il1.replacements               2472 # total number of replacements
+bpred_bimod.ras_hits.PP          560 # total number of RAS hits
+bpred_bimod.ras_rate.PP    0.9556 # RAS prediction rate (i.e., RAS hits/used RAS)
+il1.accesses                  51141 # total number of accesses
+il1.hits                      48182 # total number of hits
+il1.misses                     2959 # total number of misses
+il1.replacements               2460 # total number of replacements
 il1.writebacks                    0 # total number of writebacks
 il1.invalidations                 0 # total number of invalidations
-il1.miss_rate                0.0564 # miss rate (i.e., misses/ref)
-il1.repl_rate                0.0469 # replacement rate (i.e., repls/ref)
+il1.miss_rate                0.0579 # miss rate (i.e., misses/ref)
+il1.repl_rate                0.0481 # replacement rate (i.e., repls/ref)
 il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
 il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
-dl1.accesses                  11942 # total number of accesses
-dl1.hits                      11463 # total number of hits
-dl1.misses                      479 # total number of misses
-dl1.replacements                 37 # total number of replacements
-dl1.writebacks                   33 # total number of writebacks
+dl1.accesses                  11976 # total number of accesses
+dl1.hits                      11496 # total number of hits
+dl1.misses                      480 # total number of misses
+dl1.replacements                 38 # total number of replacements
+dl1.writebacks                   34 # total number of writebacks
 dl1.invalidations                 0 # total number of invalidations
 dl1.miss_rate                0.0401 # miss rate (i.e., misses/ref)
-dl1.repl_rate                0.0031 # replacement rate (i.e., repls/ref)
+dl1.repl_rate                0.0032 # replacement rate (i.e., repls/ref)
 dl1.wb_rate                  0.0028 # writeback rate (i.e., wrbks/ref)
 dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
-ul2.accesses                   3484 # total number of accesses
-ul2.hits                       2631 # total number of hits
-ul2.misses                      853 # total number of misses
+ul2.accesses                   3473 # total number of accesses
+ul2.hits                       2621 # total number of hits
+ul2.misses                      852 # total number of misses
 ul2.replacements                  0 # total number of replacements
 ul2.writebacks                    0 # total number of writebacks
 ul2.invalidations                 0 # total number of invalidations
-ul2.miss_rate                0.2448 # miss rate (i.e., misses/ref)
+ul2.miss_rate                0.2453 # miss rate (i.e., misses/ref)
 ul2.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
 ul2.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
 ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
-itlb.accesses                 52685 # total number of accesses
-itlb.hits                     52665 # total number of hits
+itlb.accesses                 51141 # total number of accesses
+itlb.hits                     51121 # total number of hits
 itlb.misses                      20 # total number of misses
 itlb.replacements                 0 # total number of replacements
 itlb.writebacks                   0 # total number of writebacks
@@ -3005,8 +2999,8 @@
 itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
 itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
 itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
-dtlb.accesses                 11943 # total number of accesses
-dtlb.hits                     11933 # total number of hits
+dtlb.accesses                 12109 # total number of accesses
+dtlb.hits                     12099 # total number of hits
 dtlb.misses                      10 # total number of misses
 dtlb.replacements                 0 # total number of replacements
 dtlb.writebacks                   0 # total number of writebacks
@@ -3015,20 +3009,20 @@
 dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
 dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
 dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
-rename_power             29788.4002 # total power usage of rename unit
-bpred_power             322363.2182 # total power usage of bpred unit
+rename_power             23493.0041 # total power usage of rename unit
+bpred_power             254235.8885 # total power usage of bpred unit
 ialu_access                  0.0000 # integer alu accessed 
 falu_access                  0.0000 # floating alu accessed
-window_power            157101.8450 # total power usage of instruction window
-lsq_power               167675.8354 # total power usage of load/store queue
-regfile_power           254610.0869 # total power usage of arch. regfile
-icache_power            176531.6375 # total power usage of icache
-dcache_power            867342.5400 # total power usage of dcache
-dcache2_power           299982.2323 # total power usage of dcache2
-alu_power               337484.3927 # total power usage of alu
-falu_power              254452.5183 # total power usage of falu
-resultbus_power          63082.4298 # total power usage of resultbus
-clock_power            1300468.9812 # total power usage of clock
+window_power            123900.3859 # total power usage of instruction window
+lsq_power               132239.6991 # total power usage of load/store queue
+regfile_power           200801.5121 # total power usage of arch. regfile
+icache_power            139223.9411 # total power usage of icache
+dcache_power            684040.8235 # total power usage of dcache
+dcache2_power           236584.8367 # total power usage of dcache2
+alu_power              2129291.1740 # total power usage of alu
+falu_power             1605417.9486 # total power usage of falu
+resultbus_power         234992.9878 # total power usage of resultbus
+clock_power            2096191.8337 # total power usage of clock
 avg_rename_power             0.4180 # avg power usage of rename unit
 avg_bpred_power              4.5231 # avg power usage of bpred unit
 avg_window_power             2.2043 # avg power usage of instruction window
@@ -3037,147 +3031,147 @@
 avg_icache_power             2.4769 # avg power usage of icache
 avg_dcache_power            12.1698 # avg power usage of dcache
 avg_dcache2_power            4.2091 # avg power usage of dcache2
-avg_alu_power                4.7353 # avg power usage of alu
-avg_falu_power               3.5703 # avg power usage of falu
-avg_resultbus_power          0.8851 # avg power usage of resultbus
-avg_clock_power             18.2471 # avg power usage of clock
-fetch_stage_power       498894.8558 # total power usage of fetch stage
-dispatch_stage_power     29788.4002 # total power usage of dispatch stage
-issue_stage_power      1892669.2752 # total power usage of issue stage
+avg_alu_power               37.8824 # avg power usage of alu
+avg_falu_power              28.5621 # avg power usage of falu
+avg_resultbus_power          4.1808 # avg power usage of resultbus
+avg_clock_power             37.2935 # avg power usage of clock
+fetch_stage_power       393459.8296 # total power usage of fetch stage
+dispatch_stage_power     23493.0041 # total power usage of dispatch stage
+issue_stage_power      3541049.9070 # total power usage of issue stage
 avg_fetch_power              7.0001 # average power of fetch unit per cycle
 avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
-avg_issue_power             26.5563 # average power of issue unit per cycle
-total_power            3976431.5994 # total power per cycle
-avg_total_power_cycle       55.7939 # average total power per cycle
-avg_total_power_cycle_nofp_nod2      48.0145 # average total power per cycle
-avg_total_power_insn        81.5227 # average total power per insn
-avg_total_power_insn_nofp_nod2      70.1560 # average total power per insn
-rename_power_cc1         11326.0288 # total power usage of rename unit_cc1
-bpred_power_cc1          32632.0954 # total power usage of bpred unit_cc1
-window_power_cc1         87900.3348 # total power usage of instruction window_cc1
-lsq_power_cc1            12404.2641 # total power usage of lsq_cc1
-regfile_power_cc1       105175.5174 # total power usage of arch. regfile_cc1
-icache_power_cc1         73681.5858 # total power usage of icache_cc1
-dcache_power_cc1        138808.8819 # total power usage of dcache_cc1
-dcache2_power_cc1        14508.7520 # total power usage of dcache2_cc1
-alu_power_cc1            47555.5414 # total power usage of alu_cc1
-resultbus_power_cc1      25268.2614 # total power usage of resultbus_cc1
-clock_power_cc1         283545.0251 # total power usage of clock_cc1
-avg_rename_power_cc1         0.1589 # avg power usage of rename unit_cc1
-avg_bpred_power_cc1          0.4579 # avg power usage of bpred unit_cc1
-avg_window_power_cc1         1.2333 # avg power usage of instruction window_cc1
-avg_lsq_power_cc1            0.1740 # avg power usage of lsq_cc1
-avg_regfile_power_cc1        1.4757 # avg power usage of arch. regfile_cc1
-avg_icache_power_cc1         1.0338 # avg power usage of icache_cc1
-avg_dcache_power_cc1         1.9476 # avg power usage of dcache_cc1
-avg_dcache2_power_cc1        0.2036 # avg power usage of dcache2_cc1
-avg_alu_power_cc1            0.6673 # avg power usage of alu_cc1
-avg_resultbus_power_cc1       0.3545 # avg power usage of resultbus_cc1
-avg_clock_power_cc1          3.9785 # avg power usage of clock_cc1
-fetch_stage_power_cc1   106313.6812 # total power usage of fetch stage_cc1
-dispatch_stage_power_cc1   11326.0288 # total power usage of dispatch stage_cc1
-issue_stage_power_cc1   326446.0356 # total power usage of issue stage_cc1
-avg_fetch_power_cc1          1.4917 # average power of fetch unit per cycle_cc1
-avg_dispatch_power_cc1       0.1589 # average power of dispatch unit per cycle_cc1
-avg_issue_power_cc1          4.5804 # average power of issue unit per cycle_cc1
-total_power_cycle_cc1   832806.2881 # total power per cycle_cc1
-avg_total_power_cycle_cc1      11.6852 # average total power per cycle_cc1
-avg_total_power_insn_cc1      17.0737 # average total power per insn_cc1
-rename_power_cc2          5011.0927 # total power usage of rename unit_cc2
+avg_issue_power             62.9990 # average power of issue unit per cycle
+total_power            6254996.0864 # total power per cycle
+avg_total_power_cycle      111.2830 # average total power per cycle
+avg_total_power_cycle_nofp_nod2      78.5118 # average total power per cycle
+avg_total_power_insn       132.9690 # average total power per insn
+avg_total_power_insn_nofp_nod2      93.8116 # average total power per insn
+rename_power_cc1          6861.3214 # total power usage of rename unit_cc1
+bpred_power_cc1          30160.2068 # total power usage of bpred unit_cc1
+window_power_cc1         54608.7984 # total power usage of instruction window_cc1
+lsq_power_cc1             8766.5050 # total power usage of lsq_cc1
+regfile_power_cc1        67561.5798 # total power usage of arch. regfile_cc1
+icache_power_cc1         47594.4355 # total power usage of icache_cc1
+dcache_power_cc1         94553.3586 # total power usage of dcache_cc1
+dcache2_power_cc1        14454.0338 # total power usage of dcache2_cc1
+alu_power_cc1           182144.0551 # total power usage of alu_cc1
+resultbus_power_cc1      70602.2676 # total power usage of resultbus_cc1
+clock_power_cc1         268270.3501 # total power usage of clock_cc1
+avg_rename_power_cc1         0.1221 # avg power usage of rename unit_cc1
+avg_bpred_power_cc1          0.5366 # avg power usage of bpred unit_cc1
+avg_window_power_cc1         0.9715 # avg power usage of instruction window_cc1
+avg_lsq_power_cc1            0.1560 # avg power usage of lsq_cc1
+avg_regfile_power_cc1        1.2020 # avg power usage of arch. regfile_cc1
+avg_icache_power_cc1         0.8468 # avg power usage of icache_cc1
+avg_dcache_power_cc1         1.6822 # avg power usage of dcache_cc1
+avg_dcache2_power_cc1        0.2572 # avg power usage of dcache2_cc1
+avg_alu_power_cc1            3.2405 # avg power usage of alu_cc1
+avg_resultbus_power_cc1       1.2561 # avg power usage of resultbus_cc1
+avg_clock_power_cc1          4.7728 # avg power usage of clock_cc1
+fetch_stage_power_cc1    77754.6423 # total power usage of fetch stage_cc1
+dispatch_stage_power_cc1    6861.3214 # total power usage of dispatch stage_cc1
+issue_stage_power_cc1   425129.0184 # total power usage of issue stage_cc1
+avg_fetch_power_cc1          1.3833 # average power of fetch unit per cycle_cc1
+avg_dispatch_power_cc1       0.1221 # average power of dispatch unit per cycle_cc1
+avg_issue_power_cc1          7.5635 # average power of issue unit per cycle_cc1
+total_power_cycle_cc1   845576.9120 # total power per cycle_cc1
+avg_total_power_cycle_cc1      15.0437 # average total power per cycle_cc1
+avg_total_power_insn_cc1      17.9753 # average total power per insn_cc1
+rename_power_cc2          4862.9239 # total power usage of rename unit_cc2
 bpred_power_cc2          17160.7415 # total power usage of bpred unit_cc2
-window_power_cc2         31834.1346 # total power usage of instruction window_cc2
-lsq_power_cc2             3101.2716 # total power usage of lsq_cc2
-regfile_power_cc2        14800.2278 # total power usage of arch. regfile_cc2
-icache_power_cc2         73681.5858 # total power usage of icache_cc2
-dcache_power_cc2         36332.9754 # total power usage of dcache_cc2
-dcache2_power_cc2         3666.1221 # total power usage of dcache2_cc2
-alu_power_cc2            48399.0250 # total power usage of alu_cc2
-resultbus_power_cc2       7221.6616 # total power usage of resultbus_cc2
-clock_power_cc2         119847.0117 # total power usage of clock_cc2
-avg_rename_power_cc2         0.0703 # avg power usage of rename unit_cc2
-avg_bpred_power_cc2          0.2408 # avg power usage of bpred unit_cc2
-avg_window_power_cc2         0.4467 # avg power usage of instruction window_cc2
-avg_lsq_power_cc2            0.0435 # avg power usage of instruction lsq_cc2
-avg_regfile_power_cc2        0.2077 # avg power usage of arch. regfile_cc2
-avg_icache_power_cc2         1.0338 # avg power usage of icache_cc2
-avg_dcache_power_cc2         0.5098 # avg power usage of dcache_cc2
-avg_dcache2_power_cc2        0.0514 # avg power usage of dcache2_cc2
-avg_alu_power_cc2            0.6791 # avg power usage of alu_cc2
-avg_resultbus_power_cc2       0.1013 # avg power usage of resultbus_cc2
-avg_clock_power_cc2          1.6816 # avg power usage of clock_cc2
-fetch_stage_power_cc2    90842.3274 # total power usage of fetch stage_cc2
-dispatch_stage_power_cc2    5011.0927 # total power usage of dispatch stage_cc2
-issue_stage_power_cc2   130555.1903 # total power usage of issue stage_cc2
-avg_fetch_power_cc2          1.2746 # average power of fetch unit per cycle_cc2
-avg_dispatch_power_cc2       0.0703 # average power of dispatch unit per cycle_cc2
-avg_issue_power_cc2          1.8318 # average power of issue unit per cycle_cc2
-total_power_cycle_cc2   361055.8499 # total power per cycle_cc2
-avg_total_power_cycle_cc2       5.0660 # average total power per cycle_cc2
-avg_total_power_insn_cc2       7.4022 # average total power per insn_cc2
-rename_power_cc3          6857.3299 # total power usage of rename unit_cc3
-bpred_power_cc3          46142.2216 # total power usage of bpred unit_cc3
-window_power_cc3         37505.5775 # total power usage of instruction window_cc3
-lsq_power_cc3            18463.4650 # total power usage of lsq_cc3
-regfile_power_cc3        27782.9487 # total power usage of arch. regfile_cc3
-icache_power_cc3         83966.5910 # total power usage of icache_cc3
-dcache_power_cc3        109186.3412 # total power usage of dcache_cc3
-dcache2_power_cc3        32213.4702 # total power usage of dcache2_cc3
-alu_power_cc3            77391.9102 # total power usage of alu_cc3
-resultbus_power_cc3      10403.5758 # total power usage of resultbus_cc3
-clock_power_cc3         219710.9010 # total power usage of clock_cc3
-avg_rename_power_cc3         0.0962 # avg power usage of rename unit_cc3
-avg_bpred_power_cc3          0.6474 # avg power usage of bpred unit_cc3
-avg_window_power_cc3         0.5262 # avg power usage of instruction window_cc3
-avg_lsq_power_cc3            0.2591 # avg power usage of instruction lsq_cc3
-avg_regfile_power_cc3        0.3898 # avg power usage of arch. regfile_cc3
-avg_icache_power_cc3         1.1781 # avg power usage of icache_cc3
-avg_dcache_power_cc3         1.5320 # avg power usage of dcache_cc3
-avg_dcache2_power_cc3        0.4520 # avg power usage of dcache2_cc3
-avg_alu_power_cc3            1.0859 # avg power usage of alu_cc3
-avg_resultbus_power_cc3       0.1460 # avg power usage of resultbus_cc3
-avg_clock_power_cc3          3.0828 # avg power usage of clock_cc3
-fetch_stage_power_cc3   130108.8126 # total power usage of fetch stage_cc3
-dispatch_stage_power_cc3    6857.3299 # total power usage of dispatch stage_cc3
-issue_stage_power_cc3   285164.3398 # total power usage of issue stage_cc3
-avg_fetch_power_cc3          1.8256 # average power of fetch unit per cycle_cc3
-avg_dispatch_power_cc3       0.0962 # average power of dispatch unit per cycle_cc3
-avg_issue_power_cc3          4.0012 # average power of issue unit per cycle_cc3
-total_power_cycle_cc3   669624.3320 # total power per cycle_cc3
-avg_total_power_cycle_cc3       9.3956 # average total power per cycle_cc3
-avg_total_power_insn_cc3      13.7283 # average total power per insn_cc3
-total_rename_access           47957 # total number accesses of rename unit
+window_power_cc2         32880.5890 # total power usage of instruction window_cc2
+lsq_power_cc2             3190.6623 # total power usage of lsq_cc2
+regfile_power_cc2        16121.8293 # total power usage of arch. regfile_cc2
+icache_power_cc2         47594.4355 # total power usage of icache_cc2
+dcache_power_cc2         36436.4188 # total power usage of dcache_cc2
+dcache2_power_cc2         3654.5471 # total power usage of dcache2_cc2
+alu_power_cc2            50012.5952 # total power usage of alu_cc2
+resultbus_power_cc2      37391.5593 # total power usage of resultbus_cc2
+clock_power_cc2         119972.1882 # total power usage of clock_cc2
+avg_rename_power_cc2         0.0865 # avg power usage of rename unit_cc2
+avg_bpred_power_cc2          0.3053 # avg power usage of bpred unit_cc2
+avg_window_power_cc2         0.5850 # avg power usage of instruction window_cc2
+avg_lsq_power_cc2            0.0568 # avg power usage of instruction lsq_cc2
+avg_regfile_power_cc2        0.2868 # avg power usage of arch. regfile_cc2
+avg_icache_power_cc2         0.8468 # avg power usage of icache_cc2
+avg_dcache_power_cc2         0.6482 # avg power usage of dcache_cc2
+avg_dcache2_power_cc2        0.0650 # avg power usage of dcache2_cc2
+avg_alu_power_cc2            0.8898 # avg power usage of alu_cc2
+avg_resultbus_power_cc2       0.6652 # avg power usage of resultbus_cc2
+avg_clock_power_cc2          2.1344 # avg power usage of clock_cc2
+fetch_stage_power_cc2    64755.1770 # total power usage of fetch stage_cc2
+dispatch_stage_power_cc2    4862.9239 # total power usage of dispatch stage_cc2
+issue_stage_power_cc2   163566.3717 # total power usage of issue stage_cc2
+avg_fetch_power_cc2          1.1521 # average power of fetch unit per cycle_cc2
+avg_dispatch_power_cc2       0.0865 # average power of dispatch unit per cycle_cc2
+avg_issue_power_cc2          2.9100 # average power of issue unit per cycle_cc2
+total_power_cycle_cc2   369278.4902 # total power per cycle_cc2
+avg_total_power_cycle_cc2       6.5699 # average total power per cycle_cc2
+avg_total_power_insn_cc2       7.8501 # average total power per insn_cc2
+rename_power_cc3          6526.0922 # total power usage of rename unit_cc3
+bpred_power_cc3          39581.4268 # total power usage of bpred unit_cc3
+window_power_cc3         39381.4669 # total power usage of instruction window_cc3
+lsq_power_cc3            15421.6486 # total power usage of lsq_cc3
+regfile_power_cc3        28330.3955 # total power usage of arch. regfile_cc3
+icache_power_cc3         56757.3860 # total power usage of icache_cc3
+dcache_power_cc3         95385.7737 # total power usage of dcache_cc3
+dcache2_power_cc3        25867.6274 # total power usage of dcache2_cc3
+alu_power_cc3           244727.3071 # total power usage of alu_cc3
+resultbus_power_cc3      52648.4606 # total power usage of resultbus_cc3
+clock_power_cc3         301537.5965 # total power usage of clock_cc3
+avg_rename_power_cc3         0.1161 # avg power usage of rename unit_cc3
+avg_bpred_power_cc3          0.7042 # avg power usage of bpred unit_cc3
+avg_window_power_cc3         0.7006 # avg power usage of instruction window_cc3
+avg_lsq_power_cc3            0.2744 # avg power usage of instruction lsq_cc3
+avg_regfile_power_cc3        0.5040 # avg power usage of arch. regfile_cc3
+avg_icache_power_cc3         1.0098 # avg power usage of icache_cc3
+avg_dcache_power_cc3         1.6970 # avg power usage of dcache_cc3
+avg_dcache2_power_cc3        0.4602 # avg power usage of dcache2_cc3
+avg_alu_power_cc3            4.3540 # avg power usage of alu_cc3
+avg_resultbus_power_cc3       0.9367 # avg power usage of resultbus_cc3
+avg_clock_power_cc3          5.3647 # avg power usage of clock_cc3
+fetch_stage_power_cc3    96338.8128 # total power usage of fetch stage_cc3
+dispatch_stage_power_cc3    6526.0922 # total power usage of dispatch stage_cc3
+issue_stage_power_cc3   473432.2844 # total power usage of issue stage_cc3
+avg_fetch_power_cc3          1.7140 # average power of fetch unit per cycle_cc3
+avg_dispatch_power_cc3       0.1161 # average power of dispatch unit per cycle_cc3
+avg_issue_power_cc3          8.4229 # average power of issue unit per cycle_cc3
+total_power_cycle_cc3   906165.1815 # total power per cycle_cc3
+avg_total_power_cycle_cc3      16.1216 # average total power per cycle_cc3
+avg_total_power_insn_cc3      19.2633 # average total power per insn_cc3
+total_rename_access           46539 # total number accesses of rename unit
 total_bpred_access             7588 # total number accesses of bpred unit
-total_window_access          152116 # total number accesses of instruction window
-total_lsq_access              11965 # total number accesses of load/store queue
-total_regfile_access          59261 # total number accesses of arch. regfile
-total_icache_access           53625 # total number accesses of icache
-total_dcache_access           11942 # total number accesses of dcache
-total_dcache2_access           3484 # total number accesses of dcache2
-total_alu_access              41413 # total number accesses of alu
-total_resultbus_access        40363 # total number accesses of resultbus
-avg_rename_access            0.6729 # avg number accesses of rename unit
-avg_bpred_access             0.1065 # avg number accesses of bpred unit
-avg_window_access            2.1344 # avg number accesses of instruction window
-avg_lsq_access               0.1679 # avg number accesses of lsq
-avg_regfile_access           0.8315 # avg number accesses of arch. regfile
-avg_icache_access            0.7524 # avg number accesses of icache
-avg_dcache_access            0.1676 # avg number accesses of dcache
-avg_dcache2_access           0.0489 # avg number accesses of dcache2
-avg_alu_access               0.5811 # avg number accesses of alu
-avg_resultbus_access         0.5663 # avg number accesses of resultbus
+total_window_access          157566 # total number accesses of instruction window
+total_lsq_access              12314 # total number accesses of load/store queue
+total_regfile_access          63363 # total number accesses of arch. regfile
+total_icache_access           51736 # total number accesses of icache
+total_dcache_access           11976 # total number accesses of dcache
+total_dcache2_access           3473 # total number accesses of dcache2
+total_alu_access              42798 # total number accesses of alu
+total_resultbus_access        41743 # total number accesses of resultbus
+avg_rename_access            0.8280 # avg number accesses of rename unit
+avg_bpred_access             0.1350 # avg number accesses of bpred unit
+avg_window_access            2.8033 # avg number accesses of instruction window
+avg_lsq_access               0.2191 # avg number accesses of lsq
+avg_regfile_access           1.1273 # avg number accesses of arch. regfile
+avg_icache_access            0.9204 # avg number accesses of icache
+avg_dcache_access            0.2131 # avg number accesses of dcache
+avg_dcache2_access           0.0618 # avg number accesses of dcache2
+avg_alu_access               0.7614 # avg number accesses of alu
+avg_resultbus_access         0.7427 # avg number accesses of resultbus
 max_rename_access                 4 # max number accesses of rename unit
-max_bpred_access                  3 # max number accesses of bpred unit
-max_window_access                11 # max number accesses of instruction window
-max_lsq_access                    3 # max number accesses of load/store queue
-max_regfile_access                9 # max number accesses of arch. regfile
+max_bpred_access                  4 # max number accesses of bpred unit
+max_window_access                16 # max number accesses of instruction window
+max_lsq_access                    5 # max number accesses of load/store queue
+max_regfile_access               11 # max number accesses of arch. regfile
 max_icache_access                 4 # max number accesses of icache
-max_dcache_access                 3 # max number accesses of dcache
+max_dcache_access                 5 # max number accesses of dcache
 max_dcache2_access                3 # max number accesses of dcache2
-max_alu_access                    2 # max number accesses of alu
-max_resultbus_access              4 # max number accesses of resultbus
-max_cycle_power_cc1         34.7146 # maximum cycle power usage of cc1
-max_cycle_power_cc2         20.8167 # maximum cycle power usage of cc2
-max_cycle_power_cc3         22.6423 # maximum cycle power usage of cc3
+max_alu_access                    4 # max number accesses of alu
+max_resultbus_access              7 # max number accesses of resultbus
+max_cycle_power_cc1         72.4783 # maximum cycle power usage of cc1
+max_cycle_power_cc2         30.0281 # maximum cycle power usage of cc2
+max_cycle_power_cc3         36.2693 # maximum cycle power usage of cc3
 sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
 ld_text_base             0x00400000 # program text (code) segment base
 ld_text_size                  82000 # program text (code) size in bytes
@@ -3191,6 +3185,6 @@
 mem.page_count                   31 # total number of pages allocated
 mem.page_mem                   124k # total size of memory pages allocated
 mem.ptab_misses                  35 # total first level page table misses
-mem.ptab_accesses            807586 # total page table accesses
+mem.ptab_accesses            801102 # total page table accesses
 mem.ptab_miss_rate           0.0000 # first level page table miss rate
 
